version: '3'

services:
  zookeeper:
    image: zookeeper:3.5.9
    container_name: "zookeeper"
    ports:
      - 2181:2181
  kafka:
    image: wurstmeister/kafka:1.1.0
    container_name: "kafka"
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
      - 9093:9093
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9093
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  object-storage:
    image: minio/minio:RELEASE.2019-02-26T19-51-46Z
    container_name: "minio"
    ports:
      - 9000:9000
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
      MINIO_DOMAIN: minio
    volumes:
      - ./keys:/root/.minio/certs
    command: server  /data
  pesto:
    image: my-pesto-service:latest
    container_name: "pesto"
    ports:
      - 4000:8080
    environment:
      PESTO_USE_SSL: "1"
      GDAL_HTTP_UNSAFESSL: "YES"
  cador:
    entrypoint: >
      python3 -c "from cador import app; app.start()"
    image: cador:0.7.8-ubuntu
    container_name: "cador"
    depends_on:
      - kafka
      - object-storage
      - pesto
    ports:
      - 4001:8080
    environment:
      CADOR_PORT: 8080
      PROCESSING_SERVER: https://pesto:8080/api/v1
      KAFKA_BROKERS_REQUEST: kafka:9092
      EOPAAS_JOB_REQUEST_TOPIC: pesto_task_requests
      KAFKA_BROKERS_OUTPUT: kafka:9092
      EOPAAS_JOB_OUTPUT_TOPIC: task_results
      KAFKA_BROKERS_STATUS: kafka:9092
      EOPAAS_STATUS_UPDATE_TOPIC: task_statuses
      KAFKA_BROKERS_TAGS: kafka:9092
      EOPAAS_JOB_TAGS_TOPIC: pesto_tags
      KAFKA_CONSUMER_GROUP: pesto
      CADOR_USE_SSL: "true"
