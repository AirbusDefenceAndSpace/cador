version: "3"
services:
  object-storage:
    image: minio/minio
    volumes:
    - /home:/home
    ports:
    - "9000:9000"
    environment:
      MINIO_ACCESS_KEY:
      MINIO_SECRET_KEY:
    command: server /tmp
    networks:
    - private-network
  processing:
    image: algo-service:1.0.0.dev0
    networks:
    - private-network
    ports:
    - 8080:8080
    volumes:
    - /home:/home
  cradle:
    entrypoint: >
      python3 -c "from cador import app; app.start()"
    image: cador:0.7.8-ubuntu
    networks:
    - private-network
    ports:
    - 9443:8443
    environment:
      CADOR_PORT: 8443
      CADOR_USE_SSL: "true"
      PROCESSING_SERVER: https://processing:8080/api/v1
      KAFKA_BROKERS_REQUEST: kafka:9092
      EOPAAS_JOB_REQUEST_TOPIC: ipcloud_requests
      # KAFKA_CONSUMER_GROUP: my_group
      KAFKA_BROKERS_OUTPUT: kafka:9092
      EOPAAS_JOB_OUTPUT_TOPIC: ipcloud_out
      KAFKA_BROKERS_STATUS: kafka:9092
      EOPAAS_STATUS_UPDATE_TOPIC: ipcloud_status
      KAFKA_BROKERS_TAGS: kafka:9092
      EOPAAS_JOB_TAGS_TOPIC: ipcloud_tags
      CADOR_TIMEOUT_SECONDS: 5
    volumes:
    - /home:/home
    depends_on:
    - "object-storage"
  zookeeper:
    image: wurstmeister/zookeeper
    networks:
    - private-network
    ports:
    - "2181:2181"
  kafka:
    image: wurstmeister/kafka
    networks:
    - private-network
    ports:
    - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
networks:
  private-network:
    driver: bridge
